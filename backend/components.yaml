components:
  schemas:
    securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
    UserCredentials:
      type: object
      required:
        - loginId
        - password
      properties:
        loginId:
          type: string
          example: admin
        password:
          type: string
          example: admin
    Token:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: JWT access token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
    Category:
      type: object
      required:
        - name
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: IT
    Comment:
      type: object
      required:
        - writerId
        - ideaId
        - content
      properties:
        id:
          type: number
          example: 1
        writerId:
          type: number
          example: 1
        ideaId:
          type: number
          example: 1
        content:
          type: string
          example: 아이디어 잘 보고 갑니다.
    Scrap:
      type: object
      required:
        - userId
        - ideaId
      properties:
        id:
          type: number
          example: 1
        userId:
          type: number
          example: 1
        ideaId:
          type: number
          example: 1
    Idea:
      type: object
      required:
        - writerId
        - categoryId
        - title
        - content
        - date
        - createdAt
        - views
        - scraps
      properties:
        id:
          type: number
          example: 1
        writerId:
          type: number
          example: 1
        categoryId:
          type: number
          example: 1
        title:
          type: string
          example: 아이디어 공유 플랫폼
        content:
          type: string
          example: 서로의 아이디어를 공유할 수 있는 플랫폼을 만드는 중
        date:
          type: string
          format: date
          example: 2025-06-25
        createdAt:
          type: integer
          format: int64
          example: 1624612800
        views:
          type: number
          example: 50
        scraps:
          type: number
          example: 30
        deleted:
          type: number
          example: 0
    User:
      type: object
      required:
        - role
        - nickname
        - loginId
        - password
      properties:
        id:
          type: number
          example: 1
        nickname:
          type: string
          example: miso
        loginId:
          type: string
          example: admin
        password:
          type: string
          example: admin
        deleted:
          type: number
          example: 0
  responses:
    LoginSuccessful:
      description: 로그인 성공
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Token"
    Updated:
      description: 아이템이 업데이트 되었습니다.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: 성공적으로 아이템이 업데이트 되었습니다.
    Created:
      description: 새로운 아이템이 생성 되었습니다.
      content:
        application/json:
          schema:
            type: object
            required:
              - id
              - message
            properties:
              id:
                type: number
                example: 1
              message:
                type: string
                example: 성공적으로 아이템이 생성 되었습니다.
    Deleted:
      description: 아이템이 삭제 되었습니다.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: 성공적으로 아이템이 삭제 되었습니다.
    NotFound:
      description: 아이템을 찾을 수 없습니다.
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
                example: 아이템을 찾을 수 없습니다.
    Error:
      description: 오류가 발생했습니다.
      content:
        application/json:
          schema:
            type: object
            required:
              - message
            properties:
              message:
                type: string
                example: 무언가 잘못 되었습니다.
              errors:
                type: array